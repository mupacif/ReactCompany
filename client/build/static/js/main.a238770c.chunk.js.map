{"version":3,"sources":["components/context/auth-context.js","components/context/ParseService.js","components/context/parse-context.js","containers/Dashboard/Dashboard.js","components/ProductCard/ProductCard.js","containers/Website/Home/Home.js","components/NavBar/NavBar.js","components/Modals/LoginModal/LoginModal.js","components/Modals/LoginModal/Register.js","components/Modals/LoginModal/forgottenpwd.js","containers/Website/Website.js","App.js","index.js"],"names":["AuthContext","React","createContext","authenticated","useAuth","useContext","ProvideAuth","children","auth","currentUser","Parse","User","current","defaultState","user","useState","setUser","signin","usr","cb","a","updatedState","signup","signout","logOut","then","useProvideAuth","Provider","value","ParseService","config","appId","masterKey","serverUrl","this","parse","initialize","serverURL","ParseContext","useParse","ProvideParse","Dashboard","className","Component","productCard","props","key","id","title","body","Home","state","products","fetch","response","json","data","setState","map","product","ProductCard","data-uk-grid","NavBar","console","log","data-uk-navbar","onClick","data-uk-toggle","LoginModal","parseService","getParse","username","error","status","msg","password","onChangeInput","event","target","name","setError","data-uk-modal","type","data-uk-close","onChange","e","style","color","logIn","UIkit","modal","hide","catch","err","message","signInUser","email","u","set","signUp","signUpUser","ResetPwdModal","requestPasswordReset","alert","resetPwd","Website","Register","path","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a238770c.chunk.js","sourcesContent":["import React, {  useContext, useState } from 'react';\nimport Parse from 'parse';\n\nconst AuthContext = React.createContext({\n    authenticated: true,\n});\n\n\nfunction useAuth() {\n    return useContext(AuthContext);\n}\n\n\nfunction ProvideAuth({ children }) {\n    const auth = useProvideAuth();\n    return (\n      <AuthContext.Provider value={auth}>\n        {children}\n      </AuthContext.Provider>\n    );\n  }\n\n\n\nfunction useProvideAuth() {\n  const currentUser = Parse.User.current(),\n        defaultState =  { \n            authenticated: currentUser ? true:  false,\n            user : currentUser\n          };\n\n\n    const [user, setUser] = useState(defaultState);\n  \n    const signin =  async (usr, cb) =>  {\n      const updatedState = { ...user };\n      updatedState.authenticated = true;\n      updatedState.user = usr;\n      setUser(updatedState);\n      if ( cb  && typeof cb === 'function' ) cb();\n    };\n\n\n    const signup = (usr, cb) => {\n        const updatedState = { ...user };\n        updatedState.authenticated = true;\n        updatedState.user = usr;\n        setUser(updatedState);\n\n        if ( cb  && typeof cb === 'function' ) cb();\n      };\n  \n    const signout = cb => {\n      const updatedState = { ...user };\n\n\n      Parse.User.logOut().then(() => {\n        updatedState.authenticated = false;\n        updatedState.user = null;\n        setUser(updatedState);\n      });\n\n      if ( cb  && typeof cb === 'function' ) cb();\n    };\n  \n    return {\n      user,\n      signin,\n      signup,\n      signout\n    };\n  }\n\n\n  export {\n    ProvideAuth,\n    useAuth\n  }","import Parse from 'parse';\nimport {from, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nexport default class ParseService {\n\n    parse;\n    config =  {\n      appId: 'myAppId',\n      masterKey: 'myMasterKey',\n      serverUrl : 'https://tests.pacee.net/api/react/parse'\n    };\n  \n  \n    constructor() {\n      this.parse = Parse;\n      this.parse.initialize(this.config.appId, '', this.config.masterKey);\n      this.parse.serverURL = this.config.serverUrl;\n    }\n  \n    getParse() {\n      return this.parse;\n    }\n    \n  }\n  ","\nimport React,{  useContext }  from 'react';\nimport ParseService from './ParseService'\n\n\n\nconst ParseContext = React.createContext();\n\nfunction useParse() {\n  return useContext(ParseContext);\n}\n\nfunction ProvideParse({ children }) {\n  return (\n    <ParseContext.Provider value={new ParseService()}>\n      {children}\n    </ParseContext.Provider>\n  );\n}\n\nexport {\n  useParse,\n  ProvideParse\n}","/* Packages */\nimport React, { Component } from 'react';\n\nclass Dashboard extends Component {\n  render() {\n    return(\n      <div className=\"dashboard\">\n        <h1>Dashboard</h1>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","/* Packages */\nimport React from 'react';\n\nconst productCard = (props) => {\n  return(\n    <div key={ props.id }>\n        <div className=\"uk-card uk-card-default uk-card-body\">\n            <h3 className=\"uk-card-title\">{ props.title }</h3>\n            <p>{ props.body }</p>\n        </div>\n    </div>\n  );\n}\n\nexport default productCard;\n","/* Packages */\nimport React, { Component } from 'react';\n\n/* Components */\nimport ProductCard from '../../../components/ProductCard/ProductCard';\n\nclass Home extends Component {\n  state = {\n    products: []\n  }\n\n  componentDidMount() {\n    fetch('https://api.zalando.com/articles')\n      .then(response => response.json())\n      .then(data => this.setState({ products: data }))\n  }\n\n  render() {\n\n    const products = this.state.products.map((product) => {\n        return <ProductCard key={ product.id }\n                  id={ product.id }\n                  title={ product.title }\n                  body={ product.body }/>;\n    });\n\n    return(\n      <div>\n        <h1 className=\"uk-text-center\">Home</h1>\n        <div className=\"uk-child-width-1-3@m uk-grid-small uk-grid-match products\" data-uk-grid>\n          { products }\n        </div>\n      </div>\n    );\n\n  };\n}\n\nexport default Home;\n","import React from 'react';\nimport { useAuth } from '../context/auth-context';\nfunction NavBar() {\n  let auth = useAuth();\n  console.log(auth.user.authenticated )\n  return (\n        <nav className=\"uk-navbar-container\" data-uk-navbar>\n          <div className=\"uk-navbar-right\">\n            {!auth.user.authenticated ?\n              <ul className=\"uk-navbar-nav\">\n              <li><a data-uk-toggle=\"target: #login-modal\">Log in</a></li>\n              <li><a data-uk-toggle=\"target: #register-modal\">Sign up</a></li>\n              </ul>\n              :\n              <ul className=\"uk-navbar-nav\">\n              <li><a onClick={ auth.signout }>Logout</a></li>\n              </ul>\n             }\n\n          </div>\n        </nav>\n  );\n}\n\nexport default NavBar;\n","/* Packages */\nimport React, {useState} from 'react';\n\nimport { useAuth } from '../../context/auth-context';\nimport UIkit from '../../../../node_modules/uikit/dist/js/uikit.js';\nimport { useParse } from '../../context/parse-context'\nconst LoginModal = (props) => {\n\n  let auth = useAuth();\n  const parseService = useParse().getParse();\n  const [ user, setUser ] = useState({\n    username: {\n      value: '',\n      error: {\n        status: false,\n        msg: ''\n      }\n    },\n    password: {\n      value: '',\n      error: {\n        status: false,\n        msg: ''\n      }\n    },\n    response: {\n      error: {\n        status: '',\n        msg: ''\n      }\n    }\n  });\n\n  \n  const onChangeInput = (event) => {\n    const target = event.target,\n          updatedState = { ...user };\n    \n    updatedState[target.name].value = target.value;\n    setUser(updatedState);\n  }\n\n  const signInUser = () => {\n    if (!user.username.value) setError('username', true ,'The field needs to be filled in');\n    else setError('username', false, '');\n\n    if (!user.password.value) setError('password', true ,'The field needs to be filled in');\n    else setError('password', false, '');\n\n\n    if (!user.username.error.status && !user.password.error.status) {\n      const data = {\n        username: user.username.value,\n        password: user.password.value\n      };\n\n      parseService.User.logIn(data.username, data.password).then(\n        (user)=>{\n          auth.signin(user, () => {\n            UIkit.modal('#login-modal').hide();\n          });\n        }\n      ).catch(err => {\n        return setError('response', true, err.message);\n      })    \n    }\n  }\n\n\n  const setError = (name, status, msg) => {\n    const updatedState = { ...user };\n    updatedState[name].error.msg = msg;\n    updatedState[name].error.status = status;\n    setUser(updatedState);\n  }\n\n\n\n\n  return(\n      <div id=\"login-modal\" data-uk-modal>\n        <div className=\"uk-modal-dialog\">\n            <button className=\"uk-modal-close-default\" type=\"button\" data-uk-close></button>\n        \n            <div className=\"uk-modal-header\">\n              <h2>Log in</h2>\n            </div>\n\n            <div className=\"uk-modal-body\">\n              <form>\n                <div className=\"uk-margin\">\n                  <label>Username</label>\n                  <input className=\"uk-input\" type=\"text\" name=\"username\" onChange={ (e) => { onChangeInput(e) }} />\n                  { user.username.error.status ? <p style={{ color: 'red'}}>{ user.username.error.msg}</p> : '' }\n                </div>\n                <div className=\"uk-margin\">\n                  <label>Password</label>\n                  <input className=\"uk-input\" type=\"password\" name=\"password\" onChange={ (e) => { onChangeInput(e) }} />\n                  { user.password.error.status ? <p style={{ color: 'red'}}>{ user.password.error.msg}</p> : '' }\n                </div>\n              </form>\n              <div className=\"uk-margin\">\n                  <a data-uk-toggle=\"target: #resetpwd-modal\">forgotten password</a>\n               </div>\n            </div>\n    \n        \n            <div className=\"uk-modal-footer uk-text-right\">\n              <button  onClick={()=> { signInUser()}} className=\"uk-button uk-button-primary\" type=\"button\">Log in</button>\n              { user.response.error.status ? <p style={{ color: 'red'}}>{ user.response.error.msg}</p> : '' }\n\n            </div>\n\n\n        </div>\n      </div>\n\n  );\n}\n\nexport default LoginModal;\n","/* Packages */\nimport React, {useState} from 'react';\nimport Parse from 'parse';\nimport { useAuth } from '../../context/auth-context';\nimport UIkit from '../../../../node_modules/uikit/dist/js/uikit.js';\nimport { useParse } from '../../context/parse-context'\nconst LoginModal = (props) => {\n\n  let auth = useAuth();\n  const parseService = useParse().getParse();\n  const [ user, setUser ] = useState({\n    username: {\n      value: '',\n      error: {\n        status: false,\n        msg: ''\n      }\n    },\n    email: {\n      value: '',\n      error: {\n        status: false,\n        msg: ''\n      }\n    },\n    password: {\n      value: '',\n      error: {\n        status: false,\n        msg: ''\n      }\n    },\n    response: {\n      error: {\n        status: '',\n        msg: ''\n      }\n    }\n  });\n\n  \n  const onChangeInput = (event) => {\n    const target = event.target,\n          updatedState = { ...user };\n    \n    updatedState[target.name].value = target.value;\n    setUser(updatedState);\n  }\n\n  const signUpUser = () => {\n    if (!user.username.value) setError('username', true ,'The field needs to be filled in');\n    else setError('username', false, '');\n\n    if (!user.email.value) setError('email', true ,'The field needs to be filled in');\n    else setError('email', false, '');\n\n    if (!user.password.value) setError('password', true ,'The field needs to be filled in');\n    else setError('password', false, '');\n\n    if (\n      !user.username.error.status \n      && !user.email.error.status \n      && !user.password.error.status\n      ) {\n        const data = {\n          username: user.username.value,\n          email: user.email.value,\n          password: user.password.value\n        };\n\n        const u = new Parse.User();\n        u.set('username', data.username);\n        u.set('password', data.password);\n        u.set('email', data.email);\n\n        u.signUp()\n        .then((usr)=>{\n          auth.signup(usr, (e) => {\n            UIkit.modal('#register-modal').hide();\n          });\n        }).catch((err)=>{\n          return setError('response', true, err.message);\n        })\n  \n    \n    }\n    \n  }\n\n\n  const setError = (name, status, msg) => {\n    const updatedState = { ...user };\n    updatedState[name].error.msg = msg;\n    updatedState[name].error.status = status;\n\n    setUser(updatedState);\n  }\n\n\n\n\n  return(\n      <div id=\"register-modal\" data-uk-modal>\n        <div className=\"uk-modal-dialog\">\n            <button className=\"uk-modal-close-default\" type=\"button\" data-uk-close></button>\n        \n            <div className=\"uk-modal-header\">\n              <h2>Log in</h2>\n            </div>\n\n            <div className=\"uk-modal-body\">\n              <form>\n                <div className=\"uk-margin\">\n                  <label>Username</label>\n                  <input className=\"uk-input\" type=\"text\" name=\"username\"  onChange={ (e) => { onChangeInput(e) }} />\n                  { user.username.error.status ? <p style={{ color: 'red'}}>{ user.username.error.msg}</p> : '' }\n                </div>\n                <div className=\"uk-margin\">\n                  <label>email</label>\n                  <input className=\"uk-input\" type=\"text\" name=\"email\"  onChange={ (e) => { onChangeInput(e) }} />\n                  { user.email.error.status ? <p style={{ color: 'red'}}>{ user.email.error.msg}</p> : '' }\n                </div>\n                <div className=\"uk-margin\">\n                  <label>Password</label>\n                  <input className=\"uk-input\" type=\"password\" name=\"password\" onChange={ (e) => { onChangeInput(e) }} />\n                  { user.password.error.status ? <p style={{ color: 'red'}}>{ user.password.error.msg}</p> : '' }\n                </div>\n              </form>\n            </div>\n\n            <div className=\"uk-modal-footer uk-text-right\">\n              <button  onClick={()=> { signUpUser()}} className=\"uk-button uk-button-primary\" type=\"button\">Save</button>\n              { user.response.error.status ? <p style={{ color: 'red'}}>{ user.response.error.msg}</p> : '' }\n            </div>\n        </div>\n      </div>\n\n  );\n}\n\nexport default LoginModal;\n","/* Packages */\nimport React, {useState} from 'react';\nimport Parse from 'parse';\nimport UIkit from '../../../../node_modules/uikit/dist/js/uikit.js';\nconst ResetPwdModal = (props) => {\n\n\n  const [ user, setUser ] = useState({\n\n    email: {\n      value: '',\n      error: {\n        status: false,\n        msg: ''\n      }\n    },\n    response: {\n      error: {\n        status: '',\n        msg: ''\n      }\n    }\n  });\n\n  \n  const onChangeInput = (event) => {\n    const target = event.target,\n          updatedState = { ...user };\n    \n    updatedState[target.name].value = target.value;\n    setUser(updatedState);\n  }\n\n  const resetPwd = () => {\n\n    if (!user.email.value) setError('email', true ,'The field needs to be filled in');\n    else setError('email', false, '');\n\n\n\n    if ( !user.email.error.status   ) {\n        const data = {\n          email: user.email.value\n        };\n\n        Parse.User.requestPasswordReset(data.email)\n        .then(() => {\n          alert('reset email has been sent')\n          UIkit.modal('#register-modal').hide();\n        }).catch((err) => {\n          // Show the error message somewhere\n          return setError('response', true, err.message);\n        });\n    \n    }\n    \n  }\n\n\n  const setError = (name, status, msg) => {\n    const updatedState = { ...user };\n    updatedState[name].error.msg = msg;\n    updatedState[name].error.status = status;\n\n    setUser(updatedState);\n  }\n\n\n\n\n  return(\n      <div id=\"resetpwd-modal\" data-uk-modal>\n        <div className=\"uk-modal-dialog\">\n            <button className=\"uk-modal-close-default\" type=\"button\" data-uk-close></button>\n        \n            <div className=\"uk-modal-header\">\n              <h2>Reset password</h2>\n            </div>\n\n            <div className=\"uk-modal-body\">\n              <form>\n                <div className=\"uk-margin\">\n                  <label>email</label>\n                  <input className=\"uk-input\" type=\"text\" name=\"email\"  onChange={ (e) => { onChangeInput(e) }} />\n                  { user.email.error.status ? <p style={{ color: 'red'}}>{ user.email.error.msg}</p> : '' }\n                </div>\n\n              </form>\n            </div>\n\n            <div className=\"uk-modal-footer uk-text-right\">\n              <button  onClick={()=> { resetPwd()}} className=\"uk-button uk-button-primary\" type=\"button\">Save</button>\n              { user.response.error.status ? <p style={{ color: 'red'}}>{ user.response.error.msg}</p> : '' }\n            </div>\n        </div>\n      </div>\n\n  );\n}\n\nexport default ResetPwdModal;\n","/* Packages */\nimport React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n\n/* Containers */\nimport Home from './Home/Home';\n\n/* Components */\nimport Navbar from './../../components/NavBar/NavBar';\nimport LoginModal from './../../components/Modals/LoginModal/LoginModal';\nimport RegisterModal from './../../components/Modals/LoginModal/Register';\nimport ResetPwdModal from './../../components/Modals/LoginModal/forgottenpwd'\nclass Website extends Component {\n\n\n  render() {\n    return(\n      <div className=\"website\">\n        <Navbar />\n        <LoginModal  />\n        <RegisterModal  />\n        <ResetPwdModal />\n        <Switch>\n          <Route path=\"/about\">\n            <h1>About</h1>\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n\n\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Website;\n","/* Packages */\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport {ProvideAuth } from './components/context/auth-context';\nimport {ProvideParse} from './components/context/parse-context';\n/* Containers */\nimport Dashboard from './containers/Dashboard/Dashboard';\nimport Website from './containers/Website/Website';\n\n\n/* Css */\nimport './App.css';\n\nfunction App() {\n  return (\n    <ProvideParse>\n      <ProvideAuth>\n        <Router>\n          <div className=\"App\">\n            <Switch>\n              <Route path=\"/dashboard\">\n                <Dashboard />\n              </Route>\n              <Route path=\"/\">\n                <Website />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </ProvideAuth>\n    </ProvideParse>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}