{"version":3,"sources":["components/context/auth-context.js","components/context/ParseService.js","components/context/parse-context.js","containers/Dashboard/Dashboard.js","containers/Website/Home/addCrypto.js","components/CryptoCard/CryptoCard.js","containers/Website/Home/Home.js","components/NavBar/NavBar.js","components/Modals/LoginModal/LoginModal.js","components/Modals/LoginModal/Register.js","components/Modals/LoginModal/forgottenpwd.js","components/Modals/LoginModal/resendMail.js","containers/Website/Website.js","App.js","index.js"],"names":["AuthContext","React","createContext","authenticated","useAuth","useContext","ProvideAuth","children","auth","currentUser","Parse","User","current","defaultState","user","useState","setUser","signin","usr","cb","a","updatedState","signup","signout","logOut","then","useProvideAuth","Provider","value","ParseService","config","appId","masterKey","serverUrl","this","parse","initialize","serverURL","tableName","key","field","table","Object","extend","query","Query","get","first","result","set","save","elt","obj","hasOwnProperty","ret","id","attributes","equalTo","results","find","from","pipe","map","e","u","parseObj","reverse","destroy","ParseContext","useParse","ProvideParse","Dashboard","className","Component","AddCrypto","props","parseService","name","description","crypto","setCrypto","onChangeInput","event","target","add","alert","addItem","addedElement","onChange","type","placeholder","rows","onClick","CryptoCard","uk-icon","Home","cryptos","setCryptos","recomdsParse","getAll","useEffect","sub","subscribe","unsubscribe","recoms","list","index","findIndex","splice","delete","deleteCrypto","el","push","data-uk-grid","NavBar","data-uk-navbar","data-uk-toggle","LoginModal","getParse","username","error","status","msg","password","response","setError","code","data-uk-modal","data-uk-close","style","color","data","logIn","UIkit","modal","hide","catch","err","message","signInUser","email","signUp","signUpUser","ResetPwdModal","requestPasswordReset","resetPwd","ResendMailConfirmModal","console","log","resendMail","Website","closeModal","Register","path","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4da9a7a.chunk.js","sourcesContent":["import React, {  useContext, useState } from 'react';\nimport Parse from 'parse';\n\nconst AuthContext = React.createContext({\n    authenticated: false,\n});\n\n\nfunction useAuth() {\n    return useContext(AuthContext);\n}\n\n\nfunction ProvideAuth({ children }) {\n    const auth = useProvideAuth();\n    return (\n      <AuthContext.Provider value={auth}>\n        {children}\n      </AuthContext.Provider>\n    );\n  }\n\n\n\nfunction useProvideAuth() {\n  const currentUser = Parse.User.current(),\n        defaultState =  { \n            authenticated: currentUser ? true:  false,\n            user : currentUser\n          };\n\n\n    const [user, setUser] = useState(defaultState);\n  \n    const signin =  async (usr, cb) =>  {\n      const updatedState = { ...user };\n      updatedState.authenticated = true;\n      updatedState.user = usr;\n      setUser(updatedState);\n      if ( cb  && typeof cb === 'function' ) cb();\n    };\n\n\n    const signup = (usr, cb) => {\n        const updatedState = { ...user };\n        updatedState.authenticated = true;\n        updatedState.user = usr;\n        setUser(updatedState);\n\n        if ( cb  && typeof cb === 'function' ) cb();\n      };\n  \n    const signout = cb => {\n      const updatedState = { ...user };\n\n\n      Parse.User.logOut().then(() => {\n        updatedState.authenticated = false;\n        updatedState.user = null;\n        setUser(updatedState);\n      });\n\n      if ( cb  && typeof cb === 'function' ) cb();\n    };\n    \n  \n    return {\n      user,\n      signin,\n      signup,\n      signout\n    };\n  }\n\n\n  export {\n    ProvideAuth,\n    useAuth\n  }","import Parse from 'parse';\nimport {from, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nexport default class ParseService {\n\n    parse;\n    config =  {\n      appId: 'myAppId',\n      masterKey: 'myMasterKey',\n      serverUrl : 'http://tests.pacee.net/react/parse'\n    };\n  \n  \n    constructor() {\n      this.parse = Parse;\n      this.parse.initialize(this.config.appId, '', this.config.masterKey);\n      this.parse.serverURL = this.config.serverUrl;\n    }\n\n    /***\n     * Update 1 field\n     */\n    async update(tableName, key, field, value) {\n      const table = this.parse.Object.extend(tableName);\n      const query = new Parse.Query(table);\n      query.get( key);\n      const result = await query.first();\n      result.set(field, value);\n      result.save();\n    }\n  \n\n    /**\n     * add 1 item into a table/create it if it doesnt exists\n     */\n  async addItem(tableName, elt, user) {\n    const table = this.parse.Object.extend(tableName);\n    const obj = new table();\n\n    for ( const key in elt){\n      if ( elt.hasOwnProperty(key) ) {\n        obj.set(key, elt[key]);\n      }\n    }\n\n    if ( user ){\n      obj.set(\"user\", user);\n    }\n    \n    const ret = await obj.save()\n    return {id: ret.id, ...ret.attributes};\n  }\n  \n\n  getAll(tableName, usr) {\n\n    const table = this.parse.Object.extend(tableName);\n    const query = new Parse.Query(table);\n    if ( usr ){\n      query.equalTo(\"user\", usr);\n    }\n    const results = query.find();\n    // @ts-ignore\n    return from(results).pipe(map(e => e.map(u => ({id: u.id, ...u.attributes, parseObj: u})).reverse()));\n  }\n\n    getParse() {\n      return this.parse;\n    }\n    \n\n    async delete(tableName, key) {\n      const table = this.parse.Object.extend(tableName);\n      const query = new Parse.Query(table);\n      query.get( key);\n      const result = await  query.first();\n      if ( result )\n      result.destroy();\n    }\n\n  }\n  ","\nimport React,{  useContext }  from 'react';\nimport ParseService from './ParseService'\n\n\n\nconst ParseContext = React.createContext();\n\nfunction useParse() {\n  return useContext(ParseContext);\n}\n\nfunction ProvideParse({ children }) {\n  return (\n    <ParseContext.Provider value={new ParseService()}>\n      {children}\n    </ParseContext.Provider>\n  );\n}\n\nexport {\n  useParse,\n  ProvideParse\n}","/* Packages */\nimport React, { Component } from 'react';\n\nclass Dashboard extends Component {\n  render() {\n    return(\n      <div className=\"dashboard\">\n        <h1>Dashboard</h1>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React,{useState, useEffect }  from 'react';\nimport { useParse } from '../../../components/context/parse-context';\nimport { useAuth } from '../../../components/context/auth-context';\nimport Parse from 'parse';\nconst AddCrypto =(props) =>{\n\n    const tableName = \"Recomendations\"\n    const parseService = useParse();\n    const usr = Parse.User.current();\n    const [ crypto, setCrypto] = useState({\n        name: '',\n        description : ''\n        });\n\n  \n    const onChangeInput = (event) => {\n        const target = event.target,\n                updatedState = { ...crypto };\n        \n        updatedState[target.name] = target.value;\n        setCrypto(updatedState);\n    }\n        \n\n\n  const add = async () => {\n    if (!crypto.name && !crypto.description ){\n        alert('bro wtf? add some values!')\n        return\n    }\n    const addedElement = await parseService.addItem(tableName, crypto,usr);\n    if ( props.cb ) props.cb(addedElement)\n   }\n   return (\n   <form>\n    <fieldset className=\"uk-fieldset\">\n      \n        <legend className=\"uk-legend\">Recomend a crypto</legend>\n\n        <div className=\"uk-margin\">\n            <input className=\"uk-input\" onChange={ (e) => { onChangeInput(e) }} name=\"name\" type=\"text\" placeholder=\"Name\"/>\n        </div>\n\n        <div className=\"uk-margin\">\n            <textarea className=\"uk-textarea\" onChange={ (e) => { onChangeInput(e) }} name=\"description\" rows=\"5\" placeholder=\"Why\"></textarea>\n        </div>\n\n        <button onClick= {add}  className=\"uk-button uk-button-primary\" type=\"button\">recommend</button>\n    </fieldset>\n</form>\n) \n}\n\nexport default AddCrypto","/* Packages */\nimport React,{useEffect} from 'react';\nimport Parse from 'parse';\n\n\nconst CryptoCard = (props) => {\n  const usr = Parse.User.current();\n\n  return(\n    (<div key={ props.crypto.id }>\n        <div className=\"uk-card uk-card-default uk-card-body\">\n            <h3 className=\"uk-card-title\">{ props.crypto.name } \n            \n            {usr && props.crypto.user.id == usr.id &&\n              <span className=\"uk-margin-small-right\" onClick={props.cb} uk-icon=\"trash\"></span>}\n            </h3>\n            <p>{ props.crypto.description }</p>\n        </div>\n    </div>)\n  );\n}\n\nexport default CryptoCard;\n","/* Packages */\nimport React,{useState, useEffect}from 'react';\nimport AddCrypto from './addCrypto'\n/* Components */\nimport CryptoCard from '../../../components/CryptoCard/CryptoCard';\nimport { useParse } from '../../../components/context/parse-context';\nimport Parse from 'parse';\n\n\n\n\n\nconst Home  = (props) => {\n\n  const [ cryptos, setCryptos] = useState([]);\n  const table = \"Recomendations\"\n  const parseService = useParse();\n  const user = Parse.User.current()\n  let recomdsParse = parseService.getAll(table, user );\n\n\n\n\n\n  useEffect(()=>{\n      const sub = recomdsParse.subscribe((crypto) => {\n        setCryptos(crypto)\n      });\n      return()=>{\n        sub.unsubscribe();\n        debugger\n      }\n    },[]\n  )\n\n const addToList = (el) =>{\n   const list = [...cryptos];\n   list.push(el);\n   setCryptos(list)\n }\n\n const deleteCrypto = (id) => {\n    const list = [...cryptos];\n    var index = list.findIndex(e=>e.id=id)\n    if (index !== -1) {\n      list.splice(index, 1);\n      parseService.delete(table, id);\n      setCryptos(list)\n    }\n }\n\nconst recoms = cryptos.map((e) =><CryptoCard key={e.id} crypto= {e} cb={()=>deleteCrypto(e.id)} />)\n return(\n      <div>\n        <h1 className=\"uk-text-center\">Home</h1>\n        {user && <AddCrypto cb = {addToList} />}\n        { recoms}\n        <div className=\"uk-child-width-1-3@m uk-grid-small uk-grid-match products\" data-uk-grid>\n\n        </div>\n      </div>\n    );\n\n}\n\nexport default Home;\n","import React from 'react';\nimport { useAuth } from '../context/auth-context';\nfunction NavBar() {\n  let auth = useAuth();\n  return (\n        <nav className=\"uk-navbar-container\" data-uk-navbar>\n          <div className=\"uk-navbar-right\">\n            {!auth.user.authenticated ?\n              <ul className=\"uk-navbar-nav\">\n              <li><a data-uk-toggle=\"target: #login-modal\">Log in</a></li>\n              <li><a data-uk-toggle=\"target: #register-modal\">Sign up</a></li>\n              </ul>\n              :\n              <ul className=\"uk-navbar-nav\">\n              <li><a onClick={ auth.signout }>Logout</a></li>\n              </ul>\n             }\n\n          </div>\n        </nav>\n  );\n}\n\nexport default NavBar;\n","/* Packages */\nimport React, {useState} from 'react';\nimport Parse from 'parse';\nimport { useAuth } from '../../context/auth-context';\nimport UIkit from '../../../../node_modules/uikit/dist/js/uikit.js';\nimport { useParse } from '../../context/parse-context'\nconst LoginModal = (props) => {\n\n  let auth = useAuth();\n  const parseService = useParse().getParse();\n  const [ user, setUser ] = useState({\n    username: {\n      value: '',\n      error: {\n        status: false,\n        msg: ''\n      }\n    },\n    password: {\n      value: '',\n      error: {\n        status: false,\n        msg: ''\n      }\n    },\n    response: {\n      error: {\n        status: '',\n        msg: ''\n      }\n    }\n  });\n\n  \n  const onChangeInput = (event) => {\n    const target = event.target,\n          updatedState = { ...user };\n    \n    updatedState[target.name].value = target.value;\n    setUser(updatedState);\n  }\n\n  const signInUser = () => {\n    if (!user.username.value) setError('username', true ,'The field needs to be filled in');\n    else setError('username', false, '');\n\n    if (!user.password.value) setError('password', true ,'The field needs to be filled in');\n    else setError('password', false, '');\n\n\n    if (!user.username.error.status && !user.password.error.status) {\n      const data = {\n        username: user.username.value,\n        password: user.password.value\n      };\n\n      parseService.User.logIn(data.username, data.password).then(\n        (user)=>{\n          auth.signin(user, () => {\n            UIkit.modal('#login-modal').hide();\n          });\n        }\n      ).catch(err => {\n        let msg = err.message;\n\n        return setError('response', true, msg, err.code);\n      })    \n    }\n  }\n\n\n  const setError = (name, status, msg, code) => {\n    const updatedState = { ...user };\n    updatedState[name].error.msg = msg;\n    updatedState[name].error.status = status;\n    updatedState[name].error.code = code;\n    setUser(updatedState);\n  }\n\n\n\n\n  return(\n      <div id=\"login-modal\" data-uk-modal>\n        <div className=\"uk-modal-dialog\">\n            <button className=\"uk-modal-close-default\" type=\"button\" data-uk-close></button>\n        \n            <div className=\"uk-modal-header\">\n              <h2>Log in</h2>\n            </div>\n\n            <div className=\"uk-modal-body\">\n              <form>\n                <div className=\"uk-margin\">\n                  <label>Username</label>\n                  <input className=\"uk-input\" type=\"text\" name=\"username\" onChange={ (e) => { onChangeInput(e) }} />\n                  { user.username.error.status ? <p style={{ color: 'red'}}>{ user.username.error.msg}</p> : '' }\n                </div>\n                <div className=\"uk-margin\">\n                  <label>Password</label>\n                  <input className=\"uk-input\" type=\"password\" name=\"password\" onChange={ (e) => { onChangeInput(e) }} />\n                  { user.password.error.status ? <p style={{ color: 'red'}}>{ user.password.error.msg}</p> : '' }\n                </div>\n              </form>\n              <div className=\"uk-margin\">\n                  <a data-uk-toggle=\"target: #resetpwd-modal\">forgotten password</a>\n               </div>\n            </div>\n    \n        \n            <div className=\"uk-modal-footer uk-text-right\">\n              <button  onClick={()=> { signInUser()}} className=\"uk-button uk-button-primary\" type=\"button\">Log in</button>\n              { user.response.error.status ? <p style={{ color: 'red'}}>{ user.response.error.msg}</p> : '' }\n              { user.response.error.code === 205 && <a data-uk-toggle=\"target: #resendmail-modal\">Resend onfirmation mail.</a> }\n            </div>\n\n\n        </div>\n      </div>\n\n  );\n}\n\nexport default LoginModal;\n","/* Packages */\nimport React, {useState} from 'react';\nimport Parse from 'parse';\nimport { useAuth } from '../../context/auth-context';\nimport UIkit from '../../../../node_modules/uikit/dist/js/uikit.js';\nimport { useParse } from '../../context/parse-context'\nconst LoginModal = (props) => {\n\n  let auth = useAuth();\n  const parseService = useParse().getParse();\n  const [ user, setUser ] = useState({\n    username: {\n      value: '',\n      error: {\n        status: false,\n        msg: ''\n      }\n    },\n    email: {\n      value: '',\n      error: {\n        status: false,\n        msg: ''\n      }\n    },\n    password: {\n      value: '',\n      error: {\n        status: false,\n        msg: ''\n      }\n    },\n    response: {\n      error: {\n        status: '',\n        msg: ''\n      }\n    }\n  });\n\n  \n  const onChangeInput = (event) => {\n    const target = event.target,\n          updatedState = { ...user };\n    \n    updatedState[target.name].value = target.value;\n    setUser(updatedState);\n  }\n\n  const signUpUser = () => {\n    if (!user.username.value) setError('username', true ,'The field needs to be filled in');\n    else setError('username', false, '');\n\n    if (!user.email.value) setError('email', true ,'The field needs to be filled in');\n    else setError('email', false, '');\n\n    if (!user.password.value) setError('password', true ,'The field needs to be filled in');\n    else setError('password', false, '');\n\n    if (\n      !user.username.error.status \n      && !user.email.error.status \n      && !user.password.error.status\n      ) {\n        const data = {\n          username: user.username.value,\n          email: user.email.value,\n          password: user.password.value\n        };\n\n        const u = new Parse.User();\n        u.set('username', data.username);\n        u.set('password', data.password);\n        u.set('email', data.email);\n\n        u.signUp()\n        .then((usr)=>{\n          auth.signup(usr, (e) => {\n            UIkit.modal('#register-modal').hide();\n          });\n        }).catch((err)=>{\n          return setError('response', true, err.message);\n        })\n  \n    \n    }\n    \n  }\n\n\n  const setError = (name, status, msg) => {\n    const updatedState = { ...user };\n    updatedState[name].error.msg = msg;\n    updatedState[name].error.status = status;\n\n    setUser(updatedState);\n  }\n\n\n\n\n  return(\n      <div id=\"register-modal\" data-uk-modal>\n        <div className=\"uk-modal-dialog\">\n            <button className=\"uk-modal-close-default\" type=\"button\" data-uk-close></button>\n        \n            <div className=\"uk-modal-header\">\n              <h2>Log in</h2>\n            </div>\n\n            <div className=\"uk-modal-body\">\n              <form>\n                <div className=\"uk-margin\">\n                  <label>Username</label>\n                  <input className=\"uk-input\" type=\"text\" name=\"username\"  onChange={ (e) => { onChangeInput(e) }} />\n                  { user.username.error.status ? <p style={{ color: 'red'}}>{ user.username.error.msg}</p> : '' }\n                </div>\n                <div className=\"uk-margin\">\n                  <label>email</label>\n                  <input className=\"uk-input\" type=\"text\" name=\"email\"  onChange={ (e) => { onChangeInput(e) }} />\n                  { user.email.error.status ? <p style={{ color: 'red'}}>{ user.email.error.msg}</p> : '' }\n                </div>\n                <div className=\"uk-margin\">\n                  <label>Password</label>\n                  <input className=\"uk-input\" type=\"password\" name=\"password\" onChange={ (e) => { onChangeInput(e) }} />\n                  { user.password.error.status ? <p style={{ color: 'red'}}>{ user.password.error.msg}</p> : '' }\n                </div>\n              </form>\n            </div>\n\n            <div className=\"uk-modal-footer uk-text-right\">\n              <button  onClick={()=> { signUpUser()}} className=\"uk-button uk-button-primary\" type=\"button\">Save</button>\n              { user.response.error.status ? <p style={{ color: 'red'}}>{ user.response.error.msg}</p> : '' }\n            </div>\n        </div>\n      </div>\n\n  );\n}\n\nexport default LoginModal;\n","/* Packages */\nimport React, {useState} from 'react';\nimport Parse from 'parse';\nimport UIkit from '../../../../node_modules/uikit/dist/js/uikit.js';\nconst ResetPwdModal = (props) => {\n\n\n  const [ user, setUser ] = useState({\n\n    email: {\n      value: '',\n      error: {\n        status: false,\n        msg: ''\n      }\n    },\n    response: {\n      error: {\n        status: '',\n        msg: ''\n      }\n    }\n  });\n\n  \n  const onChangeInput = (event) => {\n    const target = event.target,\n          updatedState = { ...user };\n    \n    updatedState[target.name].value = target.value;\n    setUser(updatedState);\n  }\n\n  const resetPwd = () => {\n\n    if (!user.email.value) setError('email', true ,'The field needs to be filled in');\n    else setError('email', false, '');\n\n\n\n    if ( !user.email.error.status   ) {\n        const data = {\n          email: user.email.value\n        };\n\n        Parse.User.requestPasswordReset(data.email)\n        .then(() => {\n          alert('reset email has been sent')\n          UIkit.modal('#register-modal').hide();\n        }).catch((err) => {\n          // Show the error message somewhere\n          return setError('response', true, err.message);\n        });\n    \n    }\n    \n  }\n\n\n  const setError = (name, status, msg) => {\n    const updatedState = { ...user };\n    updatedState[name].error.msg = msg;\n    updatedState[name].error.status = status;\n\n    setUser(updatedState);\n  }\n\n\n\n\n  return(\n      <div id=\"resetpwd-modal\" data-uk-modal>\n        <div className=\"uk-modal-dialog\">\n            <button className=\"uk-modal-close-default\" type=\"button\" data-uk-close></button>\n        \n            <div className=\"uk-modal-header\">\n              <h2>Reset password</h2>\n            </div>\n\n            <div className=\"uk-modal-body\">\n              <form>\n                <div className=\"uk-margin\">\n                  <label>email</label>\n                  <input className=\"uk-input\" type=\"text\" name=\"email\"  onChange={ (e) => { onChangeInput(e) }} />\n                  { user.email.error.status ? <p style={{ color: 'red'}}>{ user.email.error.msg}</p> : '' }\n                </div>\n\n              </form>\n            </div>\n\n            <div className=\"uk-modal-footer uk-text-right\">\n              <button  onClick={()=> { resetPwd()}} className=\"uk-button uk-button-primary\" type=\"button\">Save</button>\n              { user.response.error.status ? <p style={{ color: 'red'}}>{ user.response.error.msg}</p> : '' }\n            </div>\n        </div>\n      </div>\n\n  );\n}\n\nexport default ResetPwdModal;\n","/* Packages */\nimport React, {useState} from 'react';\n\nconst ResendMailConfirmModal = (props) => {\n\n\n  const [ user, setUser ] = useState({\n\n    email: {\n      value: '',\n      error: {\n        status: false,\n        msg: ''\n      }\n    },\n    response: {\n      error: {\n        status: '',\n        msg: ''\n      }\n    }\n  });\n\n  \n  const onChangeInput = (event) => {\n    const target = event.target,\n          updatedState = { ...user };\n    \n    updatedState[target.name].value = target.value;\n    setUser(updatedState);\n  }\n\n  const resendMail = () => {\n\n    if (!user.email.value) setError('email', true ,'The field needs to be filled in');\n    else setError('email', false, '');\n\n\n\n    if ( !user.email.error.status   ) {\n        const data = {\n          email: user.email.value\n        };\n\n       console.log('ok')\n    \n    }\n    \n  }\n\n\n  const setError = (name, status, msg) => {\n    const updatedState = { ...user };\n    updatedState[name].error.msg = msg;\n    updatedState[name].error.status = status;\n\n    setUser(updatedState);\n  }\n\n\n\n\n  return(\n      <div id=\"resendmail-modal\" data-uk-modal>\n        <div className=\"uk-modal-dialog\">\n            <button className=\"uk-modal-close-default\" type=\"button\" data-uk-close></button>\n        \n            <div className=\"uk-modal-header\">\n              <h2>Resend confirmation email</h2>\n            </div>\n\n            <div className=\"uk-modal-body\">\n              <form>\n                <div className=\"uk-margin\">\n                  <label>email</label>\n                  <input className=\"uk-input\" type=\"text\" name=\"email\"  onChange={ (e) => { onChangeInput(e) }} />\n                  { user.email.error.status ? <p style={{ color: 'red'}}>{ user.email.error.msg}</p> : '' }\n                </div>\n\n              </form>\n            </div>\n\n            <div className=\"uk-modal-footer uk-text-right\">\n              <button  onClick={()=> { resendMail()}} className=\"uk-button uk-button-primary\" type=\"button\">Save</button>\n              { user.response.error.status ? <p style={{ color: 'red'}}>{ user.response.error.msg}</p> : '' }\n            </div>\n        </div>\n      </div>\n\n  );\n}\n\nexport default ResendMailConfirmModal;\n","/* Packages */\nimport React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport UIkit from '../../../node_modules/uikit/dist/js/uikit.js';\n\n/* Containers */\nimport Home from './Home/Home';\n\n/* Components */\nimport Navbar from './../../components/NavBar/NavBar';\nimport LoginModal from './../../components/Modals/LoginModal/LoginModal';\nimport RegisterModal from './../../components/Modals/LoginModal/Register';\nimport ResetPwdModal from './../../components/Modals/LoginModal/forgottenpwd';\nimport ResendMailConfirmModal from './../../components/Modals/LoginModal/resendMail'\nclass Website extends Component {\n\n  closeModal = () => {\n    UIkit.modal('#login-modal').hide();\n  }\n\n  render() {\n    return(\n      <div className=\"website\">\n        <Navbar />\n        <LoginModal  />\n        <RegisterModal  />\n        <ResetPwdModal /> \n        <ResendMailConfirmModal />\n        <Switch>\n          <Route path=\"/about\">\n            <h1>About</h1>\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Website;\n","/* Packages */\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport {ProvideAuth } from './components/context/auth-context';\nimport {ProvideParse} from './components/context/parse-context';\n/* Containers */\nimport Dashboard from './containers/Dashboard/Dashboard';\nimport Website from './containers/Website/Website';\n\n\n/* Css */\nimport './App.css';\n\nfunction App() {\n  return (\n    <ProvideParse>\n      <ProvideAuth>\n        <Router>\n          <div className=\"App\">\n            <Switch>\n              <Route path=\"/dashboard\">\n                <Dashboard />\n              </Route>\n              <Route path=\"/\">\n                <Website />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </ProvideAuth>\n    </ProvideParse>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}